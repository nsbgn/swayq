// Code generated by go generate; DO NOT EDIT.
// See builtin.generator.go for more information
package main
import . "github.com/itchyny/gojq"
import "github.com/itchyny/gojq"

func LoadBuiltin(name string) *gojq.Query {
	switch(name){
	case "ansi":
		return &Query{Meta: &ConstObject{KeyVals: []*ConstObjectKeyVal{{Key: "name", Val: &ConstTerm{Str: "ansi"}}, {Key: "description", Val: &ConstTerm{Str: "ANSI escape codes."}}}}, FuncDefs: []*FuncDef{{Name: "color", Args: []string{"$c", "$fg"}, Body: &Query{FuncDefs: []*FuncDef{{Name: "_colors", Body: &Query{Term: &Term{Type: gojq.TermTypeObject, Object: &Object{KeyVals: []*ObjectKeyVal{{KeyString: &String{Str: "black"}, Val: &Query{Term: &Term{Type: gojq.TermTypeArray, Array: &Array{Query: &Query{Left: &Query{Term: &Term{Type: gojq.TermTypeNumber, Number: "30"}}, Op: gojq.OpComma, Right: &Query{Term: &Term{Type: gojq.TermTypeNumber, Number: "40"}}}}}}}, {KeyString: &String{Str: "red"}, Val: &Query{Term: &Term{Type: gojq.TermTypeArray, Array: &Array{Query: &Query{Left: &Query{Term: &Term{Type: gojq.TermTypeNumber, Number: "31"}}, Op: gojq.OpComma, Right: &Query{Term: &Term{Type: gojq.TermTypeNumber, Number: "41"}}}}}}}, {KeyString: &String{Str: "green"}, Val: &Query{Term: &Term{Type: gojq.TermTypeArray, Array: &Array{Query: &Query{Left: &Query{Term: &Term{Type: gojq.TermTypeNumber, Number: "32"}}, Op: gojq.OpComma, Right: &Query{Term: &Term{Type: gojq.TermTypeNumber, Number: "42"}}}}}}}, {KeyString: &String{Str: "yellow"}, Val: &Query{Term: &Term{Type: gojq.TermTypeArray, Array: &Array{Query: &Query{Left: &Query{Term: &Term{Type: gojq.TermTypeNumber, Number: "33"}}, Op: gojq.OpComma, Right: &Query{Term: &Term{Type: gojq.TermTypeNumber, Number: "43"}}}}}}}, {KeyString: &String{Str: "blue"}, Val: &Query{Term: &Term{Type: gojq.TermTypeArray, Array: &Array{Query: &Query{Left: &Query{Term: &Term{Type: gojq.TermTypeNumber, Number: "34"}}, Op: gojq.OpComma, Right: &Query{Term: &Term{Type: gojq.TermTypeNumber, Number: "44"}}}}}}}, {KeyString: &String{Str: "magenta"}, Val: &Query{Term: &Term{Type: gojq.TermTypeArray, Array: &Array{Query: &Query{Left: &Query{Term: &Term{Type: gojq.TermTypeNumber, Number: "35"}}, Op: gojq.OpComma, Right: &Query{Term: &Term{Type: gojq.TermTypeNumber, Number: "45"}}}}}}}, {KeyString: &String{Str: "cyan"}, Val: &Query{Term: &Term{Type: gojq.TermTypeArray, Array: &Array{Query: &Query{Left: &Query{Term: &Term{Type: gojq.TermTypeNumber, Number: "36"}}, Op: gojq.OpComma, Right: &Query{Term: &Term{Type: gojq.TermTypeNumber, Number: "46"}}}}}}}, {KeyString: &String{Str: "white"}, Val: &Query{Term: &Term{Type: gojq.TermTypeArray, Array: &Array{Query: &Query{Left: &Query{Term: &Term{Type: gojq.TermTypeNumber, Number: "37"}}, Op: gojq.OpComma, Right: &Query{Term: &Term{Type: gojq.TermTypeNumber, Number: "47"}}}}}}}, {KeyString: &String{Str: "lightgray"}, Val: &Query{Term: &Term{Type: gojq.TermTypeArray, Array: &Array{Query: &Query{Left: &Query{Term: &Term{Type: gojq.TermTypeNumber, Number: "37"}}, Op: gojq.OpComma, Right: &Query{Term: &Term{Type: gojq.TermTypeNumber, Number: "47"}}}}}}}, {KeyString: &String{Str: "gray"}, Val: &Query{Term: &Term{Type: gojq.TermTypeArray, Array: &Array{Query: &Query{Left: &Query{Term: &Term{Type: gojq.TermTypeNumber, Number: "90"}}, Op: gojq.OpComma, Right: &Query{Term: &Term{Type: gojq.TermTypeNumber, Number: "100"}}}}}}}, {KeyString: &String{Str: "brightblack"}, Val: &Query{Term: &Term{Type: gojq.TermTypeArray, Array: &Array{Query: &Query{Left: &Query{Term: &Term{Type: gojq.TermTypeNumber, Number: "90"}}, Op: gojq.OpComma, Right: &Query{Term: &Term{Type: gojq.TermTypeNumber, Number: "100"}}}}}}}, {KeyString: &String{Str: "brightred"}, Val: &Query{Term: &Term{Type: gojq.TermTypeArray, Array: &Array{Query: &Query{Left: &Query{Term: &Term{Type: gojq.TermTypeNumber, Number: "91"}}, Op: gojq.OpComma, Right: &Query{Term: &Term{Type: gojq.TermTypeNumber, Number: "101"}}}}}}}, {KeyString: &String{Str: "brightgreen"}, Val: &Query{Term: &Term{Type: gojq.TermTypeArray, Array: &Array{Query: &Query{Left: &Query{Term: &Term{Type: gojq.TermTypeNumber, Number: "92"}}, Op: gojq.OpComma, Right: &Query{Term: &Term{Type: gojq.TermTypeNumber, Number: "102"}}}}}}}, {KeyString: &String{Str: "brightyellow"}, Val: &Query{Term: &Term{Type: gojq.TermTypeArray, Array: &Array{Query: &Query{Left: &Query{Term: &Term{Type: gojq.TermTypeNumber, Number: "93"}}, Op: gojq.OpComma, Right: &Query{Term: &Term{Type: gojq.TermTypeNumber, Number: "103"}}}}}}}, {KeyString: &String{Str: "brightblue"}, Val: &Query{Term: &Term{Type: gojq.TermTypeArray, Array: &Array{Query: &Query{Left: &Query{Term: &Term{Type: gojq.TermTypeNumber, Number: "94"}}, Op: gojq.OpComma, Right: &Query{Term: &Term{Type: gojq.TermTypeNumber, Number: "104"}}}}}}}, {KeyString: &String{Str: "brightmagenta"}, Val: &Query{Term: &Term{Type: gojq.TermTypeArray, Array: &Array{Query: &Query{Left: &Query{Term: &Term{Type: gojq.TermTypeNumber, Number: "95"}}, Op: gojq.OpComma, Right: &Query{Term: &Term{Type: gojq.TermTypeNumber, Number: "105"}}}}}}}, {KeyString: &String{Str: "brightcyan"}, Val: &Query{Term: &Term{Type: gojq.TermTypeArray, Array: &Array{Query: &Query{Left: &Query{Term: &Term{Type: gojq.TermTypeNumber, Number: "96"}}, Op: gojq.OpComma, Right: &Query{Term: &Term{Type: gojq.TermTypeNumber, Number: "106"}}}}}}}, {KeyString: &String{Str: "brightwhite"}, Val: &Query{Term: &Term{Type: gojq.TermTypeArray, Array: &Array{Query: &Query{Left: &Query{Term: &Term{Type: gojq.TermTypeNumber, Number: "97"}}, Op: gojq.OpComma, Right: &Query{Term: &Term{Type: gojq.TermTypeNumber, Number: "107"}}}}}}}}}}}}}, Term: &Term{Type: gojq.TermTypeString, Str: &String{Queries: []*Query{{Term: &Term{Type: gojq.TermTypeString, Str: &String{Str: "\x1b["}}}, {Term: &Term{Type: gojq.TermTypeQuery, Query: &Query{Term: &Term{Type: gojq.TermTypeFunc, Func: &Func{Name: "_colors"}, SuffixList: []*Suffix{{Index: &Index{Start: &Query{Func: "$c"}}}, {Index: &Index{Start: &Query{Term: &Term{Type: gojq.TermTypeIf, If: &If{Cond: &Query{Func: "$fg"}, Then: &Query{Term: &Term{Type: gojq.TermTypeNumber, Number: "0"}}, Else: &Query{Term: &Term{Type: gojq.TermTypeNumber, Number: "1"}}}}}}}}}}}}, {Term: &Term{Type: gojq.TermTypeString, Str: &String{Str: "m"}}}}}}}}, {Name: "_wrap", Args: []string{"$i"}, Body: &Query{Term: &Term{Type: gojq.TermTypeString, Str: &String{Queries: []*Query{{Term: &Term{Type: gojq.TermTypeString, Str: &String{Str: "\x1b["}}}, {Term: &Term{Type: gojq.TermTypeQuery, Query: &Query{Func: "$i"}}}, {Term: &Term{Type: gojq.TermTypeString, Str: &String{Str: "m"}}}, {Term: &Term{Type: gojq.TermTypeQuery, Query: &Query{Func: "."}}}, {Term: &Term{Type: gojq.TermTypeString, Str: &String{Str: "\x1b[0m"}}}}}}}}, {Name: "bold", Body: &Query{Term: &Term{Type: gojq.TermTypeFunc, Func: &Func{Name: "_wrap", Args: []*Query{{Term: &Term{Type: gojq.TermTypeNumber, Number: "1"}}}}}}}, {Name: "dim", Body: &Query{Term: &Term{Type: gojq.TermTypeFunc, Func: &Func{Name: "_wrap", Args: []*Query{{Term: &Term{Type: gojq.TermTypeNumber, Number: "2"}}}}}}}, {Name: "italic", Body: &Query{Term: &Term{Type: gojq.TermTypeFunc, Func: &Func{Name: "_wrap", Args: []*Query{{Term: &Term{Type: gojq.TermTypeNumber, Number: "3"}}}}}}}, {Name: "underline", Body: &Query{Term: &Term{Type: gojq.TermTypeFunc, Func: &Func{Name: "_wrap", Args: []*Query{{Term: &Term{Type: gojq.TermTypeNumber, Number: "4"}}}}}}}, {Name: "invert", Body: &Query{Term: &Term{Type: gojq.TermTypeFunc, Func: &Func{Name: "_wrap", Args: []*Query{{Term: &Term{Type: gojq.TermTypeNumber, Number: "7"}}}}}}}, {Name: "clear", Body: &Query{Term: &Term{Type: gojq.TermTypeString, Str: &String{Str: "\x1b[2J"}}}}, {Name: "curpos", Args: []string{"$i", "$j"}, Body: &Query{Term: &Term{Type: gojq.TermTypeString, Str: &String{Queries: []*Query{{Term: &Term{Type: gojq.TermTypeString, Str: &String{Str: "\x1b["}}}, {Term: &Term{Type: gojq.TermTypeQuery, Query: &Query{Func: "$i"}}}, {Term: &Term{Type: gojq.TermTypeString, Str: &String{Str: ";"}}}, {Term: &Term{Type: gojq.TermTypeQuery, Query: &Query{Func: "$j"}}}, {Term: &Term{Type: gojq.TermTypeString, Str: &String{Str: "H"}}}}}}}}, {Name: "fg", Args: []string{"$c"}, Body: &Query{Term: &Term{Type: gojq.TermTypeString, Str: &String{Queries: []*Query{{Term: &Term{Type: gojq.TermTypeQuery, Query: &Query{Term: &Term{Type: gojq.TermTypeFunc, Func: &Func{Name: "color", Args: []*Query{{Func: "$c"}, {Func: "true"}}}}}}}, {Term: &Term{Type: gojq.TermTypeQuery, Query: &Query{Func: "."}}}, {Term: &Term{Type: gojq.TermTypeString, Str: &String{Str: "\x1b[39m"}}}}}}}}, {Name: "bg", Args: []string{"$c"}, Body: &Query{Term: &Term{Type: gojq.TermTypeString, Str: &String{Queries: []*Query{{Term: &Term{Type: gojq.TermTypeQuery, Query: &Query{Term: &Term{Type: gojq.TermTypeFunc, Func: &Func{Name: "color", Args: []*Query{{Func: "$c"}, {Func: "false"}}}}}}}, {Term: &Term{Type: gojq.TermTypeQuery, Query: &Query{Func: "."}}}, {Term: &Term{Type: gojq.TermTypeString, Str: &String{Str: "\x1b[49m"}}}}}}}}}}
	case "con":
		return &Query{Meta: &ConstObject{KeyVals: []*ConstObjectKeyVal{{Key: "name", Val: &ConstTerm{Str: "con"}}, {Key: "description", Val: &ConstTerm{Str: "Filters for traversing containers in the layout tree."}}}}, FuncDefs: []*FuncDef{{Name: "children", Body: &Query{Left: &Query{Term: &Term{Type: gojq.TermTypeIndex, Index: &Index{Name: "nodes"}, SuffixList: []*Suffix{{Iter: true}}}}, Op: gojq.OpComma, Right: &Query{Term: &Term{Type: gojq.TermTypeIndex, Index: &Index{Name: "floating_nodes"}, SuffixList: []*Suffix{{Iter: true}}}}}}, {Name: "focused_child", Args: []string{"$n"}, Body: &Query{Term: &Term{Type: gojq.TermTypeIndex, Index: &Index{Name: "focus"}, SuffixList: []*Suffix{{Index: &Index{Start: &Query{Func: "$n"}}}, {Bind: &Bind{Patterns: []*Pattern{{Name: "$id"}}, Body: &Query{Left: &Query{Func: "children"}, Op: gojq.OpPipe, Right: &Query{Term: &Term{Type: gojq.TermTypeFunc, Func: &Func{Name: "select", Args: []*Query{{Left: &Query{Term: &Term{Type: gojq.TermTypeIndex, Index: &Index{Name: "id"}}}, Op: gojq.OpEq, Right: &Query{Func: "$id"}}}}}}}}}}}}}, {Name: "focused_child", Body: &Query{Term: &Term{Type: gojq.TermTypeFunc, Func: &Func{Name: "focused_child", Args: []*Query{{Term: &Term{Type: gojq.TermTypeNumber, Number: "0"}}}}}}}, {Name: "focused", Args: []string{"condition"}, Body: &Query{Term: &Term{Type: gojq.TermTypeFunc, Func: &Func{Name: "until", Args: []*Query{{Func: "condition"}, {Func: "focused_child"}}}}}}, {Name: "focused", Body: &Query{Term: &Term{Type: gojq.TermTypeFunc, Func: &Func{Name: "focused", Args: []*Query{{Left: &Query{Left: &Query{Term: &Term{Type: gojq.TermTypeIndex, Index: &Index{Name: "nodes"}}}, Op: gojq.OpEq, Right: &Query{Term: &Term{Type: gojq.TermTypeArray, Array: &Array{}}}}, Op: gojq.OpAnd, Right: &Query{Left: &Query{Term: &Term{Type: gojq.TermTypeIndex, Index: &Index{Name: "floating_nodes"}}}, Op: gojq.OpEq, Right: &Query{Term: &Term{Type: gojq.TermTypeArray, Array: &Array{}}}}}}}}}}, {Name: "find_all", Args: []string{"condition"}, Body: &Query{Left: &Query{Term: &Term{Type: gojq.TermTypeFunc, Func: &Func{Name: "recurse", Args: []*Query{{Func: "children"}}}}}, Op: gojq.OpPipe, Right: &Query{Term: &Term{Type: gojq.TermTypeFunc, Func: &Func{Name: "select", Args: []*Query{{Func: "condition"}}}}}}}, {Name: "find", Args: []string{"condition"}, Body: &Query{Left: &Query{Term: &Term{Type: gojq.TermTypeFunc, Func: &Func{Name: "first", Args: []*Query{{Term: &Term{Type: gojq.TermTypeFunc, Func: &Func{Name: "find_all", Args: []*Query{{Func: "condition"}}}}}}}}}, Op: gojq.OpAlt, Right: &Query{Func: "null"}}}, {Name: "lineage", Args: []string{"target", "child"}, Body: &Query{Term: &Term{Type: gojq.TermTypeFunc, Func: &Func{Name: "target"}, SuffixList: []*Suffix{{Bind: &Bind{Patterns: []*Pattern{{Name: "$x"}}, Body: &Query{Term: &Term{Type: gojq.TermTypeIf, If: &If{Cond: &Query{Left: &Query{Left: &Query{Func: "$x"}, Op: gojq.OpEq, Right: &Query{Func: "true"}}, Op: gojq.OpOr, Right: &Query{Term: &Term{Type: gojq.TermTypeTry, Try: &Try{Body: &Query{Term: &Term{Type: gojq.TermTypeQuery, Query: &Query{Left: &Query{Term: &Term{Type: gojq.TermTypeFunc, Func: &Func{Name: "$x"}, SuffixList: []*Suffix{{Index: &Index{Name: "id"}}}}}, Op: gojq.OpEq, Right: &Query{Term: &Term{Type: gojq.TermTypeIndex, Index: &Index{Name: "id"}}}}}}, Catch: &Query{Func: "false"}}}}}, Then: &Query{Term: &Term{Type: gojq.TermTypeArray, Array: &Array{Query: &Query{Func: "."}}}}, Else: &Query{Left: &Query{Term: &Term{Type: gojq.TermTypeQuery, Query: &Query{Left: &Query{Func: "child"}, Op: gojq.OpPipe, Right: &Query{Term: &Term{Type: gojq.TermTypeFunc, Func: &Func{Name: "lineage", Args: []*Query{{Func: "target"}, {Func: "child"}}}}}}}}, Op: gojq.OpAdd, Right: &Query{Term: &Term{Type: gojq.TermTypeArray, Array: &Array{Query: &Query{Func: "."}}}}}}}}}}}}}}, {Name: "lineage", Args: []string{"target"}, Body: &Query{Term: &Term{Type: gojq.TermTypeFunc, Func: &Func{Name: "lineage", Args: []*Query{{Func: "target"}, {Func: "children"}}}}}}, {Name: "lineage", Body: &Query{Term: &Term{Type: gojq.TermTypeFunc, Func: &Func{Name: "lineage", Args: []*Query{{Term: &Term{Type: gojq.TermTypeFunc, Func: &Func{Name: "isempty", Args: []*Query{{Func: "focused_child"}}}}}, {Func: "focused_child"}}}}}}, {Name: "scratchpad", Body: &Query{Left: &Query{Term: &Term{Type: gojq.TermTypeIndex, Index: &Index{Name: "nodes"}, SuffixList: []*Suffix{{Iter: true}}}}, Op: gojq.OpPipe, Right: &Query{Left: &Query{Term: &Term{Type: gojq.TermTypeFunc, Func: &Func{Name: "select", Args: []*Query{{Left: &Query{Term: &Term{Type: gojq.TermTypeIndex, Index: &Index{Name: "name"}}}, Op: gojq.OpEq, Right: &Query{Term: &Term{Type: gojq.TermTypeString, Str: &String{Str: "__i3"}}}}}}}}, Op: gojq.OpPipe, Right: &Query{Term: &Term{Type: gojq.TermTypeIndex, Index: &Index{Name: "nodes"}, SuffixList: []*Suffix{{Index: &Index{Start: &Query{Term: &Term{Type: gojq.TermTypeNumber, Number: "0"}}}}}}}}}}, {Name: "tiles", Body: &Query{Term: &Term{Type: gojq.TermTypeFunc, Func: &Func{Name: "recurse", Args: []*Query{{Term: &Term{Type: gojq.TermTypeIndex, Index: &Index{Name: "nodes"}, SuffixList: []*Suffix{{Iter: true}}}}}}}}}, {Name: "leaves", Body: &Query{Left: &Query{Term: &Term{Type: gojq.TermTypeFunc, Func: &Func{Name: "recurse", Args: []*Query{{Term: &Term{Type: gojq.TermTypeIndex, Index: &Index{Name: "nodes"}, SuffixList: []*Suffix{{Iter: true}}}}}}}}, Op: gojq.OpPipe, Right: &Query{Term: &Term{Type: gojq.TermTypeFunc, Func: &Func{Name: "select", Args: []*Query{{Left: &Query{Left: &Query{Term: &Term{Type: gojq.TermTypeIndex, Index: &Index{Name: "type"}}}, Op: gojq.OpEq, Right: &Query{Term: &Term{Type: gojq.TermTypeString, Str: &String{Str: "con"}}}}, Op: gojq.OpAnd, Right: &Query{Left: &Query{Term: &Term{Type: gojq.TermTypeIndex, Index: &Index{Name: "layout"}}}, Op: gojq.OpEq, Right: &Query{Term: &Term{Type: gojq.TermTypeString, Str: &String{Str: "none"}}}}}}}}}}}}}
	case "ipc":
		return &Query{Meta: &ConstObject{KeyVals: []*ConstObjectKeyVal{{Key: "name", Val: &ConstTerm{Str: "ipc"}}, {Key: "description", Val: &ConstTerm{Str: "Filters for inter-process communication (IPC) as defined in <https://i3wm.org/docs/ipc.html>."}}}}, FuncDefs: []*FuncDef{{Name: "run_command", Args: []string{"$payload"}, Body: &Query{Term: &Term{Type: gojq.TermTypeFunc, Func: &Func{Name: "_ipc", Args: []*Query{{Func: "$SOCK"}, {Term: &Term{Type: gojq.TermTypeNumber, Number: "0"}}, {Func: "$payload"}, {Func: "false"}}}}}}, {Name: "get_workspaces", Body: &Query{Term: &Term{Type: gojq.TermTypeFunc, Func: &Func{Name: "_ipc", Args: []*Query{{Func: "$SOCK"}, {Term: &Term{Type: gojq.TermTypeNumber, Number: "1"}}, {Func: "null"}, {Func: "false"}}}}}}, {Name: "subscribe", Args: []string{"$payload"}, Body: &Query{Term: &Term{Type: gojq.TermTypeFunc, Func: &Func{Name: "_ipc", Args: []*Query{{Func: "$SOCK"}, {Term: &Term{Type: gojq.TermTypeNumber, Number: "2"}}, {Left: &Query{Func: "$payload"}, Op: gojq.OpPipe, Right: &Query{Func: "tostring"}}, {Func: "true"}}}}}}, {Name: "get_outputs", Body: &Query{Term: &Term{Type: gojq.TermTypeFunc, Func: &Func{Name: "_ipc", Args: []*Query{{Func: "$SOCK"}, {Term: &Term{Type: gojq.TermTypeNumber, Number: "3"}}, {Func: "null"}, {Func: "false"}}}}}}, {Name: "get_tree", Body: &Query{Term: &Term{Type: gojq.TermTypeFunc, Func: &Func{Name: "_ipc", Args: []*Query{{Func: "$SOCK"}, {Term: &Term{Type: gojq.TermTypeNumber, Number: "4"}}, {Func: "null"}, {Func: "false"}}}}}}, {Name: "get_marks", Body: &Query{Term: &Term{Type: gojq.TermTypeFunc, Func: &Func{Name: "_ipc", Args: []*Query{{Func: "$SOCK"}, {Term: &Term{Type: gojq.TermTypeNumber, Number: "5"}}, {Func: "null"}, {Func: "false"}}}}}}, {Name: "get_bar_config", Args: []string{"$payload"}, Body: &Query{Term: &Term{Type: gojq.TermTypeFunc, Func: &Func{Name: "_ipc", Args: []*Query{{Func: "$SOCK"}, {Term: &Term{Type: gojq.TermTypeNumber, Number: "6"}}, {Func: "$payload"}, {Func: "false"}}}}}}, {Name: "get_bar_config", Body: &Query{Term: &Term{Type: gojq.TermTypeFunc, Func: &Func{Name: "get_bar_config", Args: []*Query{{Func: "null"}}}}}}, {Name: "get_version", Body: &Query{Term: &Term{Type: gojq.TermTypeFunc, Func: &Func{Name: "_ipc", Args: []*Query{{Func: "$SOCK"}, {Term: &Term{Type: gojq.TermTypeNumber, Number: "7"}}, {Func: "null"}, {Func: "false"}}}}}}, {Name: "get_binding_modes", Body: &Query{Term: &Term{Type: gojq.TermTypeFunc, Func: &Func{Name: "_ipc", Args: []*Query{{Func: "$SOCK"}, {Term: &Term{Type: gojq.TermTypeNumber, Number: "8"}}, {Func: "null"}, {Func: "false"}}}}}}, {Name: "get_config", Body: &Query{Term: &Term{Type: gojq.TermTypeFunc, Func: &Func{Name: "_ipc", Args: []*Query{{Func: "$SOCK"}, {Term: &Term{Type: gojq.TermTypeNumber, Number: "9"}}, {Func: "null"}, {Func: "false"}}}}}}, {Name: "send_tick", Args: []string{"$payload"}, Body: &Query{Term: &Term{Type: gojq.TermTypeFunc, Func: &Func{Name: "_ipc", Args: []*Query{{Func: "$SOCK"}, {Term: &Term{Type: gojq.TermTypeNumber, Number: "10"}}, {Func: "$payload"}, {Func: "false"}}}}}}, {Name: "sync", Args: []string{"$payload"}, Body: &Query{Term: &Term{Type: gojq.TermTypeFunc, Func: &Func{Name: "_ipc", Args: []*Query{{Func: "$SOCK"}, {Term: &Term{Type: gojq.TermTypeNumber, Number: "11"}}, {Func: "$payload"}, {Func: "false"}}}}}}, {Name: "get_binding_state", Args: []string{"$payload"}, Body: &Query{Term: &Term{Type: gojq.TermTypeFunc, Func: &Func{Name: "_ipc", Args: []*Query{{Func: "$SOCK"}, {Term: &Term{Type: gojq.TermTypeNumber, Number: "12"}}, {Func: "$payload"}, {Func: "false"}}}}}}}}
	default:
		return nil
	}
}

func listBuiltins() []string {
	return []string{
		"ansi",
		"con",
		"ipc",
	}
}